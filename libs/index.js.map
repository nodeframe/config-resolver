{"version":3,"sources":["../src/index.js"],"names":["DEFAULT_ROOT","__dirname","isObject","item","Array","isArray","requireWithDefault","path","default_require","require","e","code","mergeConfigs","resolveConfig","conf","Object","keys","map","v","envs","exec","cenvs","value","cf","process","env","toUpperCase","reduce","acc","curr","readCommon","dir","readProduction","readDevelopment","read","module","exports","file","NODE_ENV"],"mappings":"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","file":"index.js","sourcesContent":["\nimport merge from 'deepmerge';\n\nconst DEFAULT_ROOT = __dirname + \"/./../../../configs\";\n\nfunction isObject (item) {\n  return (typeof item === \"object\" && !Array.isArray(item) && item !== null);\n}\nfunction isArray(item){\n  return Array.isArray(item);\n}\n\nconst requireWithDefault = (path,default_require={})=>{\n  try{\n    return require(path);\n  }catch(e){\n    if(e.code === \"MODULE_NOT_FOUND\")\n      return default_require;\n    else\n      throw e\n  }\n}\n\nconst mergeConfigs = (...confs)=>{\n  return merge(...confs);\n};\n\nconst resolveConfig = (conf)=>{\n  if(typeof conf !== 'object') {return conf}\n  return Object.keys(conf).map((v)=>{\n    const envs = /^@(.*)/.exec(v);\n    const cenvs = /^@(.*?):([^:]*)/.exec(v);\n    const value = (isObject(conf[v]))?\n      resolveConfig(conf[v]):\n      (isArray(conf[v]))?conf[v].map((cf)=>resolveConfig(cf))\n      :conf[v];\n    if(cenvs && cenvs[1] && cenvs[2]){\n      return {[cenvs[1]]:(process.env[cenvs[2].toUpperCase()]||value)};\n    }else if(envs && envs[1]){\n      return {[envs[1]]:(process.env[envs[1].toUpperCase()]||value)};\n    }else{\n      return {[v]:value};\n    }\n  }).reduce((acc,curr)=>{\n    return {...acc,...curr};\n  },{});\n};\n\nconst readCommon = (dir)=>{\n  return requireWithDefault(dir+\"/./common.js\",{});\n};\n\nconst readProduction = (dir)=>{\n  return requireWithDefault(dir+\"/./production.js\",{});\n};\n\nconst readDevelopment = (dir)=>{\n  return requireWithDefault(dir+\"/./development.js\",{});\n};\n\nconst read = (dir, env) => {\n  try{\n    return require(dir + \"/./\" + env + \".js\");\n  }catch(e){\n    return readDevelopment(dir);\n  }\n}\n\nmodule.exports = function({dir = DEFAULT_ROOT} = {}){\n  let file\n  if (process.env.NODE_ENV === 'production') {\n    file = readProduction(dir)\n  } else {\n    file = read(dir, process.env.NODE_ENV)\n  }\n\n  return resolveConfig(\n    mergeConfigs(readCommon(dir),file)\n  );\n};\n"]}